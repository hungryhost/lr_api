openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/property/{id}/:
    get:
      operationId: retrieveProperty
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this property.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
      tags:
      - api
    put:
      operationId: updateProperty
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this property.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProperty
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this property.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProperty
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this property.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/property/:
    get:
      operationId: listPropertys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
          description: ''
      tags:
      - api
    post:
      operationId: createProperty
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
      tags:
      - api
  /api/v1/profile/{id}/:
    get:
      operationId: retrieveProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    put:
      operationId: updateProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this profile.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/profile/:
    get:
      operationId: listProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - api
  /api/v1/auth/register/:
    post:
      operationId: createregistration
      description: ''
      parameters:
        - name: first_name
          in: query
          required: true
          description: A unique integer value identifying this profile.
          schema:
            type: string
      responses:
        201:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/201_OK'
      tags:
      - api
  /api/v1/auth/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/auth/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/v1/auth/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    Property:
      type: object
      properties:
        author_id:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        body:
          type: string
        price:
          type: integer
        active:
          type: boolean
        image:
          type: string
      required:
      - title
      - body
      - price
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        account_type:
          enum:
          - ADMIN
          - STAFF
          - OWNER
          - CLIENT
          - OTHER
          type: string
        email:
          type: string
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Register:
      type: object
      properties:
        first_name:
          type: string
          writeOnly: true
        last_name:
          type: string
          writeOnly: true
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - first_name
      - last_name
      - password
      - password2

    201_OK:
      title: Successful response
      type: object
      properties:
        access:
          type: string
          example:
        refresh:
          type: string
          example:
        personal_info:
          $ref: '#/components/schemas/personal_info'
    personal_info:
      title: personal_info
      type: object
      properties:
        account_id:
          type: number
          example: 1
        first_name:
          type: string
          example: "Jane"
        last_name:
          type: string
          example: "Doe"
        account_type:
          type: string
          example: "OWNER"