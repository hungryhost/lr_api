# Generated by Django 3.1.2 on 2021-01-26 07:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import properties.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('register', '__first__'),
        ('common', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('body', models.TextField(max_length=500)),
                ('price', models.PositiveIntegerField()),
                ('visibility', models.IntegerField(choices=[(100, 'Publicly Visible'), (200, 'Only within the organisation'), (300, 'Only owner and admins can see')], default=100)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('maximum_number_of_clients', models.IntegerField(default=1)),
                ('client_greeting_message', models.CharField(blank=True, max_length=500)),
                ('requires_additional_confirmation', models.BooleanField(blank=True, default=False)),
                ('booking_interval', models.IntegerField(blank=True, default=0)),
                ('maximum_number_of_bookings_daily', models.IntegerField(blank=True, default=-1)),
                ('maximum_booking_length', models.IntegerField(blank=True, default=-1)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyTypes',
            fields=[
                ('property_type', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('POST', 'Post Request'), ('PUT', 'PUT Request'), ('PATCH', 'PATCH Request'), ('DELETE', 'DELETE Request'), ('DEACTIVATE', 'DEACTIVATE property'), ('GIVE_ACC', 'Give access to property')], max_length=300)),
                ('act_time', models.DateTimeField(auto_now_add=True, verbose_name='act_time')),
                ('result', models.BooleanField(verbose_name='result')),
                ('listed_prop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='property_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_types', to='properties.propertytypes'),
        ),
        migrations.CreateModel(
            name='PremisesImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=properties.models.path_and_rename)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_main', models.BooleanField(default=False)),
                ('premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_images', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='PremisesAddresses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('street_1', models.CharField(max_length=100)),
                ('street_2', models.CharField(blank=True, max_length=100)),
                ('building', models.CharField(blank=True, max_length=20)),
                ('floor', models.CharField(blank=True, max_length=20)),
                ('number', models.CharField(blank=True, max_length=30)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('directions_description', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('premises', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='property_address', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.IntegerField(blank=True, choices=[(100, 'Publicly Visible'), (150, 'Visible for those who booked the property'), (200, 'Only within the organisation scope'), (250, 'Only within the property owners scope'), (300, 'Only property initial owner and admins can see')], default=250)),
                ('is_creator', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('permission_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_levels', to='common.permissionlevels')),
                ('premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='properties.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocksWithProperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('lock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tied_lock', to='register.lock', to_field='uuid')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_with_lock', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked_from', models.DateTimeField()),
                ('booked_until', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('client_email', models.EmailField(blank=True, max_length=254)),
                ('number_of_clients', models.IntegerField(blank=True, default=1)),
                ('status', models.CharField(choices=[('ACCEPTED', 'Approved'), ('AWAITING', 'Awaiting action from the owner'), ('DECLINED', 'The owner declined the request')], default='AWAITING', max_length=100)),
                ('is_deleted', models.BooleanField(default=False)),
                ('booked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('booked_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booked_property', to='properties.property')),
            ],
        ),
    ]
